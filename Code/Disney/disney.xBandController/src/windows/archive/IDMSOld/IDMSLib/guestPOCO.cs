//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace IDMSLib
{
    public partial class guestPOCO
    {
        #region Primitive Properties
    
        public virtual long guestId
        {
            get;
            set;
        }
    
        public virtual string lastName
        {
            get;
            set;
        }
    
        public virtual string firstName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DOB
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> active
        {
            get;
            set;
        }
    
        public virtual string createdBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> createdDate
        {
            get;
            set;
        }
    
        public virtual string updatedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> updatedDate
        {
            get;
            set;
        }
    
        public virtual string sourceId
        {
            get;
            set;
        }
    
        public virtual Nullable<long> sourceTypeId
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<guest_info> guest_info
        {
            get
            {
                if (_guest_info == null)
                {
                    var newCollection = new FixupCollection<guest_info>();
                    newCollection.CollectionChanged += Fixupguest_info;
                    _guest_info = newCollection;
                }
                return _guest_info;
            }
            set
            {
                if (!ReferenceEquals(_guest_info, value))
                {
                    var previousValue = _guest_info as FixupCollection<guest_info>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupguest_info;
                    }
                    _guest_info = value;
                    var newValue = value as FixupCollection<guest_info>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupguest_info;
                    }
                }
            }
        }
        private ICollection<guest_info> _guest_info;
    
        public virtual ICollection<guest_xband> guest_xband
        {
            get
            {
                if (_guest_xband == null)
                {
                    var newCollection = new FixupCollection<guest_xband>();
                    newCollection.CollectionChanged += Fixupguest_xband;
                    _guest_xband = newCollection;
                }
                return _guest_xband;
            }
            set
            {
                if (!ReferenceEquals(_guest_xband, value))
                {
                    var previousValue = _guest_xband as FixupCollection<guest_xband>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupguest_xband;
                    }
                    _guest_xband = value;
                    var newValue = value as FixupCollection<guest_xband>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupguest_xband;
                    }
                }
            }
        }
        private ICollection<guest_xband> _guest_xband;

        #endregion
        #region Association Fixup
    
        private void Fixupguest_info(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (guest_info item in e.NewItems)
                {
                    item.guestId = guestId;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (guest_info item in e.OldItems)
                {
                }
            }
        }
    
        private void Fixupguest_xband(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (guest_xband item in e.NewItems)
                {
                    item.guestId = guestId;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (guest_xband item in e.OldItems)
                {
                    item.guestId = null;
                }
            }
        }

        #endregion
    }
}
