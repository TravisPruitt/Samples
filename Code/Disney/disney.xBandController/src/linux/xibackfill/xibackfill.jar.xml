<?xml version="1.0" encoding="UTF-8"?>
<project name="nemo" default="all">
  
  
  <property file="nemo.jar.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->

  <property name="skip.tests" value="true"/>

  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/JObjC.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="../../../../../../Users/Fable/.m2/repository/sonic"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.c3p0.classpath">
    <pathelement location="${path.variable.m2_repo}/c3p0/c3p0/0.9.1.2/c3p0-0.9.1.2.jar"/>
  </path>
  
  <path id="library.commonlib-1.0-snapshot.classpath">
    <pathelement location="${path.variable.m2_repo}/com/disney/xband/CommonLib/1.0-SNAPSHOT/CommonLib-1.0-SNAPSHOT.jar"/>
  </path>
  
  <path id="library.commons-io-2.0.1.classpath">
    <pathelement location="${path.variable.m2_repo}/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar"/>
  </path>
  
  <path id="library.idmslib.classpath">
    <pathelement location="${path.variable.m2_repo}/com/disney/xband/IDMSLib/1.0-SNAPSHOT/IDMSLib-1.0-SNAPSHOT.jar"/>
  </path>
  
  <path id="library.jackson.classpath">
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-core-asl/1.7.1/jackson-core-asl-1.7.1.jar"/>
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-core-lgpl/1.6.4/jackson-core-lgpl-1.6.4.jar"/>
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-jaxrs/1.7.1/jackson-jaxrs-1.7.1.jar"/>
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-mapper-asl/1.7.1/jackson-mapper-asl-1.7.1.jar"/>
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-mapper-lgpl/1.6.4/jackson-mapper-lgpl-1.6.4.jar"/>
    <pathelement location="${path.variable.m2_repo}/org/codehaus/jackson/jackson-xc/1.7.1/jackson-xc-1.7.1.jar"/>
  </path>
  
  <path id="library.jtds-1.2.classpath">
    <pathelement location="${basedir}/jtds-1.2.jar"/>
  </path>
  
  <path id="library.log4j.classpath">
    <pathelement location="${path.variable.m2_repo}/log4j/log4j/1.2.17/log4j-1.2.17.jar"/>
  </path>
  
  
  <!-- Application Server Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module nemo -->
  
  <dirname property="module.nemo.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.nemo" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.nemo" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.nemo" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.nemo" value="${compiler.args}"/>
  
  <property name="nemo.output.dir" value="${module.nemo.basedir}/out/production/nemo"/>
  <property name="nemo.testoutput.dir" value="${module.nemo.basedir}/out/test/nemo"/>
  
  <path id="nemo.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="nemo.module.production.classpath">
    <path refid="${module.jdk.classpath.nemo}"/>
    <path refid="library.c3p0.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.commonlib-1.0-snapshot.classpath"/>
    <path refid="library.jtds-1.2.classpath"/>
    <path refid="library.jackson.classpath"/>
    <path refid="library.idmslib.classpath"/>
    <path refid="library.commons-io-2.0.1.classpath"/>
  </path>
  
  <path id="nemo.runtime.production.module.classpath">
    <pathelement location="${nemo.output.dir}"/>
    <path refid="library.c3p0.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.commonlib-1.0-snapshot.classpath"/>
    <path refid="library.jtds-1.2.classpath"/>
    <path refid="library.jackson.classpath"/>
    <path refid="library.idmslib.classpath"/>
    <path refid="library.commons-io-2.0.1.classpath"/>
  </path>
  
  <path id="nemo.module.classpath">
    <path refid="${module.jdk.classpath.nemo}"/>
    <pathelement location="${nemo.output.dir}"/>
    <path refid="library.c3p0.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.commonlib-1.0-snapshot.classpath"/>
    <path refid="library.jtds-1.2.classpath"/>
    <path refid="library.jackson.classpath"/>
    <path refid="library.idmslib.classpath"/>
    <path refid="library.commons-io-2.0.1.classpath"/>
  </path>
  
  <path id="nemo.runtime.module.classpath">
    <pathelement location="${nemo.testoutput.dir}"/>
    <pathelement location="${nemo.output.dir}"/>
    <path refid="library.c3p0.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.commonlib-1.0-snapshot.classpath"/>
    <path refid="library.jtds-1.2.classpath"/>
    <path refid="library.jackson.classpath"/>
    <path refid="library.idmslib.classpath"/>
    <path refid="library.commons-io-2.0.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.nemo">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.nemo">
    <patternset refid="excluded.from.module.nemo"/>
  </patternset>
  
  <path id="nemo.module.sourcepath">
    <dirset dir="${module.nemo.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.nemo" depends="compile.module.nemo.production,compile.module.nemo.tests" description="Compile module nemo"/>
  
  <target name="compile.module.nemo.production" depends="register.custom.compilers" description="Compile module nemo; production classes">
    <mkdir dir="${nemo.output.dir}"/>
    <javac2 destdir="${nemo.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.nemo}/javac">
      <compilerarg line="${compiler.args.nemo}"/>
      <bootclasspath refid="nemo.module.bootclasspath"/>
      <classpath refid="nemo.module.production.classpath"/>
      <src refid="nemo.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.nemo"/>
    </javac2>
    
    <copy todir="${nemo.output.dir}">
      <fileset dir="${module.nemo.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.nemo.tests" depends="register.custom.compilers,compile.module.nemo.production" description="compile module nemo; test classes" unless="skip.tests"/>
  
  <target name="clean.module.nemo" description="cleanup module">
    <delete dir="${nemo.output.dir}"/>
    <delete dir="${nemo.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.nemo" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.nemo" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>